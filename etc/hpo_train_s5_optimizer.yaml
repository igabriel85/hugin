model_name: s5_train_test_optimizer # Name of the model
data_source: !!python/object/apply:hugin.io.FileSystemLoader
  kwds:
    data_pattern: '(?P<category>[0-9A-Za-z_]+)_AOI_(?P<location>\d+_[A-Za-z0-9]+)_(?P<type>[a-zA-Z]+)_(?P<idx>[a-zA-Z0-9]+)(?P<gti>_GTI)?.tif$'
    id_format: '{location}-{idx}'
    type_format: '{type}{gti}'
    input_source: /data/syno1/sage-storage/Spacenet_5/nfs/data/cosmiq/spacenet/competitions/SN5_roads/tiles_upload/train/AOI_7_Moscow/
    validation_percent: 0.20
dataset_cache: /home/gabriel/experiments/s5/cache_hpo_s5.yaml
max_number_images: 4
window_size: [ 256, 256 ]
stride_size: 100
random_seed: 42
model_type: keras
mapping:
  inputs:   
    - [ "MSNone", 1 ]
    - [ "MSNone", 2 ]
    - [ "MSNone", 3 ]
    - [ "MSNone", 4 ]
  target:
    - [ "MS_GTI", 1 ]
model:
  hpo: "random" # TODO add support for more advanced HPO methods currently supports only grid and random
  hpo_mode: "minimize"
  hpo_sample_size: 10
  model_builder: hugin.models.unet.unetv14:unet_v2
  batch_size: 15
  model_path: "/home/gabriel/experiments/s5/models/{model_name}.hdf5"
  loss: categorical_crossentropy
  log: "/home/gabriel/experiments/s5/models/{model_name}.csv"
  train_epochs: 15
  swap_axes: True
  params:
    drop_p1: [0.3]
    drop_p2: [0.3]
    activation_p1: ['relu']
    activation_p2: ['relu']
    batch_norm: [0]
#  optimizers:
#    - nadam
#    - SGD
#    - Adam
  optimizers:
    nadam:
        lr: [0.01,0.001]
        beta_1: [0.7, 0.9]
        beta_2: [0.7, 0.9]
        epsilon: [0.01, 0.1]
        schedule_decay: [0.01, 0.1]

#  optimiser: !!python/object/apply:keras.optimizers.Adam
#    kwds:
#      lr:

  metrics:
    - accuracy
    - !!python/name:hugin.tools.utils.dice_coef
  format_converter: !!python/object/apply:hugin.io.CategoricalConverter
    kwds:
      num_classes: 2
